name: Deploy Domain Protect
on:
  workflow_dispatch:
  push:
  pull_request:

env:
  TF_VAR_org_primary_account: ${{ secrets.ORG_PRIMARY_ACCOUNT }}
  TF_VAR_slack_channels: ${{ secrets.SLACK_CHANNELS }}
  TF_VAR_slack_channels_dev: ${{ secrets.SLACK_CHANNELS_DEV }}
  TF_VAR_slack_webhook_urls: ${{ secrets.SLACK_WEBHOOK_URLS }}
  TF_VAR_external_id: ${{ secrets.EXTERNAL_ID }}
  TF_VAR_cloudflare: true
  TF_VAR_cf_api_key: ${{ secrets.CF_API_KEY }}
  TF_VAR_rcu: 1
  TF_VAR_wcu: 1
  TF_VAR_ip_address: true
  TF_VAR_allowed_regions: ${{ secrets.ALLOWED_REGIONS }}

jobs:
  terraform_plan_apply_dev:
    name: Terraform plan & apply dev
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.2

      - name: checkout Domain Protect
        uses: actions/checkout@v3
        with:
          repository: ovotech/domain-protect
          ref: refs/heads/main

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install virtualenv
        run: pip install virtualenv
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          aws-region: ${{ secrets.AWS_REGION }}
          AWS_DEPLOY_ROLE_ARN: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Terraform initialise
        run: >
          terraform init 
          -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET}} 
          -backend-config=key=${{ secrets.TERRAFORM_STATE_KEY}} 
          -backend-config=region=${{ secrets.TERRAFORM_STATE_REGION}}

      - name: set Terraform dev workspace
        run: terraform workspace new dev || terraform workspace select dev

      - name: terraform plan dev
        run: terraform plan -out tfplan

      - name: terraform apply dev
        run: terraform apply -auto-approve tfplan

  approve_prd_plan:
    name: Approve prd
    environment: 'prd'
    runs-on: ubuntu-latest
    needs:
    - terraform_plan_apply_dev
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v3
  
  terraform_plan_prd:
    name: Terraform plan prd
    runs-on: ubuntu-latest
    needs: approve_prd_plan

    permissions:
      id-token: write
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.2

      - name: checkout Domain Protect
        uses: actions/checkout@v3
        with:
          repository: ovotech/domain-protect
          ref: refs/heads/main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          aws-region: ${{ secrets.AWS_REGION }}
          AWS_DEPLOY_ROLE_ARN: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Terraform initialise
        run: >
          terraform init 
          -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET}} 
          -backend-config=key=${{ secrets.TERRAFORM_STATE_KEY}} 
          -backend-config=region=${{ secrets.TERRAFORM_STATE_REGION}}

      - name: set Terraform prd workspace
        run: terraform workspace new prd || terraform workspace select prd

      - name: terraform plan prd
        run: terraform plan -out output/prd/tfplan

      - name: Archive prd terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-prd
          path: output/prd/tfplan

  approve_prd_apply:
    name: Approve prd apply
    environment: 'prd'
    runs-on: ubuntu-latest
    needs:
    - terraform_plan_prd
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v3
  terraform_apply_prd:
    name: Terraform plan prd
    runs-on: ubuntu-latest
    needs: approve_prd_apply

    permissions:
      id-token: write
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.2

      - name: checkout Domain Protect
        uses: actions/checkout@v3
        with:
          repository: ovotech/domain-protect
          ref: refs/heads/main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          aws-region: ${{ secrets.AWS_REGION }}
          AWS_DEPLOY_ROLE_ARN: ${{ secrets.AWS_DEPLOY_ROLE_ARN}}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Terraform initialise
        run: >
          terraform init 
          -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET}} 
          -backend-config=key=${{ secrets.TERRAFORM_STATE_KEY}} 
          -backend-config=region=${{ secrets.TERRAFORM_STATE_REGION}}

      - name: set Terraform prd workspace
        run: terraform workspace new prd || terraform workspace select prd

      - name: Download prd terraform plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-prd
          path: input/prd/tfplan

      - name: terraform apply prd
        run: terraform apply input/prd/tfplan
